name: YouTube News Metadata Daily Crawl

on:
  schedule:
    - cron: '0 18 * * *'   # KST 03:00
  workflow_dispatch:

jobs:
  run-crawler:
    runs-on: ubuntu-latest

    permissions:
      contents: write   # 아래 auto-commit용 (필요)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true            # <- LFS 실제 파일 받기
          # submodules: recursive  # (서브모듈 쓰면 주석 해제)

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      # --- 디버깅 & 존재 검증 ---
      - name: List files in repository root
        run: ls -R .

      - name: Check data directory contents
        run: |
          ls -l || true
          ls -l data || true
          echo "---- LFS status ----"
          git lfs version || true
          git lfs ls-files || true

      - name: Verify CSV (case-sensitive)
        run: |
          set -e
          FILE="data/youtube_news_channel_list.csv"
          if [ ! -f "$FILE" ]; then
            echo "❌ Not found: $FILE (대소문자/경로 확인 필요)"
            echo "Candidates:"
            find . -maxdepth 3 -iname "*youtube*news*channel*list*.csv" -print || true
            exit 1
          else
            echo "✅ Found: $FILE"
          fi

      - name: Run YouTube Crawler Script
        working-directory: ${{ github.workspace }}   # 명시적으로 루트에서 실행
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          python collect_news_metadata.py

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: Daily YouTube video metadata update"
          branch: main
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
